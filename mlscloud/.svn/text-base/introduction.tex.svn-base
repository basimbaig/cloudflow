\section{Introduction}
\label{sec:introduction}

%\begin{enumerate}
%\item The flexibility and efficiency of the cloud model has prompted increasing number of users to adopt it for their storage and computation needs.
%\item Clients have different needs and usually large companies have many different departments that need segregation of data and computation. This is usually achieved via Bell-Lapdula and Chinese wall policies.
%\item However in a cloud scenario, co-resident VMs give rise to the problem of involuntary side channels.
%\item We need to provide a mechanism that enables MLS segregation for the cloud. We will implement a cloud-wide invariant that states that no side channels-exist between VMs at different MLS levels.
%\item We present MLS-Cloud, a cloud level MLS mechanism that uses fast virtual machine introspection to efficiently and transparently enable MLS policies across the cloud.
%\item MLS-Cloud mitigates involuntary side-channels and enables enforcement of MLS policies for companies running an in-house cloud.
%
%\end{enumerate}

The flexibility and efficiency of the virtualization based cloud computing
makes it extremely attractive for in-house deployments where companies
set up cloud based data centers and share hardware resources across all
their users. 

Nevertheless, clouds come with a number of new security issues, a primary
one amongst them being the inherent existence of side-channels due to resource-sharing. 

Virtual machines (VMs) sharing the same hardware are
vulnerable to malicious side-channel attacks
\cite{SideCrypto,SideCloud,LastSummer,ScriptlessAttacks,PrimeProbe12} making 
the enforcement of proper cloud-wide information flow control difficult.
Yet, this is a major requirement for (in-house) clouds that may be hosting
workload from different units which should be mutually isolated for
regulatory and security reasons. 

For example, information flow control is an essential part of enforcing
regulatory compliance required in e.g., heavily regulated financial companies
which need to enforce Chinese wall policies to segregate resources used by
different internal departments and provide proof that no conflicts of
interest exist as a result of unwanted information leaks. 

History has shown that self-regulation does not always work \cite{Enron} and as a
result laws have been promulgated \cite{Sox} requiring e.g., the
brokerage and investment arms of the same financial organization to be
separated via a Chinese Wall. Similar regulation governs interactions in
healthcare enterprises, financial ratings companies etc. 

Intra-node and limited inter-node information flow control mechanisms have
been researched for decades and have resulted in several practical systems
such as Histar \cite{HiStar} and SELinux \cite{SeStat} which aim to provide
general MLS and information flow control mechanisms at OS level.

However, since node-level side-channels cannot be eliminated efficiently when
resources are shared across multiple co-resident VMs, it is important to
explore whether and how cloud-wide information flow invariants can be
enforced.

Unfortunately, the explosive emergence of clouds has left its adopters
without access to information flow control tools that work at cloud scope,
and businesses are forced to deploy inefficient, ad-hoc solutions such as
manual segregation of internal networks and hosts to solve their regulatory
compliance information flow control requirements.  Overall, private cloud
technology is missing a security platform that can translate high level
information flow control policies, such as role based user and workflow isolation, 
into micro security decisions that are enforced infrastructure-wide at runtime.

Initial work (Home Alone \cite{HomeAlone}) has tackled certain issues of
side-channel prevention in public clouds by allowing a tenant to verify its
VMs' exclusive use of a physical machine.  

In this paper we go one step further and design a cloud-wide, automatic
information flow control mechanism. CloudFlow is a suite of lightweight
modules designed for OpenStack \cite{OpenStack} that deploy fast
hypervisor-level VM introspection, management and migration
to efficiently and transparently enforce cloud-wide information flow control
invariants. The main philosophy behind CloudFlow is to not require any
changes to the hosted guest VMs or applications.

The main contributions of this work are as follows. Firstly, we provide a
new introspection mechanism for KVM-QEMU \cite{QEMU} that
allows for fast asynchronous VM introspection at the hypervisor
level. Our technique is several orders of magnitude faster than previous 
libraries such as libvirt \cite{libvirt} and libVMI
\cite{libvmi}.  Secondly we design a cloud-wide information flow control
layer for OpenStack \cite{OpenStack} that leverages the introspection
mechanisms to enforce best-effort real-time information flow control.

